<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="config.mybatis.mapper.oracle.professor">
	<select id="selectPwd" parameterType="String" resultType="String">
		select pwd from professor where prof_no=#{profNo}
	</select>

   	<select id="selectByProfNo" parameterType="String" resultType="professorVO">
   		select * from professor where prof_no=#{profNo}
   	</select>
   	<select id="selectSsn" parameterType="string" resultType="string">
   		select ssn from official_info where official_no=#{officicalNo}
   	</select>

   	<select id="loadByProfNo" parameterType="string" resultType="subjectAllVo">
   			select s.*,
   			 (select count(*)
   				from subj_time
   				 where open_sub_code=(select open_sub_code from open_subj
       			where  prof_no=#{profNo} and SUBJ_CODE=s.subj_code)) count
				from subject s
				where prof_no=#{profNo}
   	</select>

	<select id="codeByProfNo" parameterType="string" resultType="string">
		select OPEN_SUB_CODE from open_subj where prof_no=#{profNo}
	</select>


   	<select id="timeByCode" resultType="subj_timetableVo" parameterType="list">
   		select t.*, s.subj_name
   		from subj_time t join subject s
   		on t.open_sub_code = substr(s.subj_code, 5)
   		<if test="list.size!=0">
	   		where OPEN_SUB_CODE in
	   		<foreach collection="list" item="item" index="index"
	   			open="(" separator="," close=")">
	   			#{item}
	   		</foreach>
   		</if>
   	</select>

   	<insert id="insertSubjTime" parameterType="subj_timeVo">
   		<selectKey keyProperty="lectureTimeNo" order="BEFORE" resultType="int">
   			select subj_time_seq.nextval from dual
   		</selectKey>
   		insert into subj_time(LECTURE_TIME_NO, OPEN_SUB_CODE, TIMETABLE_CODE, CLASSROOM_CODE)
   		values(#{lectureTimeNo}, #{openSubCode}, #{timetableCode}, #{classroomCode})
   	</insert>

   	<select id="classroomByDepNo" parameterType="string" resultType="map">
   		select * from class where dep_no=#{depNo}
   	</select>

   	<select id="selectViewByProfNo" parameterType="String"
		resultType="map">
		select * from PROFESSOR_VIEW where prof_no=#{profNo}
	</select>


	<select id="countByOpenCode" parameterType="string" resultType="int">
		select count(*) from regi_timetable where open_sub_code=#{openSubCode}
	</select>

   	<select id="selectShortName" parameterType="string" resultType="string">
   		select short_name from timetable where timetable_code=#{timetableCode}
   	</select>

   	<insert id="insertTimetable" parameterType="regi_timetableVo">
   		insert into regi_timetable
   		values(#{openSubCode}, #{shortNames})
   	</insert>
   	<update id="updateTimetable" parameterType="regi_timetableVo">
   		update regi_timetable
   		set short_names = short_names || ',' || #{shortNames}
   		where open_sub_code=#{openSubCode}
   	</update>

	<select id="selectProfessorView" parameterType="profSearchVO"
		resultType="map">
		select *
		from
		(
		select rownum as RNUM, A.*
		from(
		<if
			test="(profName==null or profName =='') and
		(facultyNo==null or facultyNo =='') and (depNo==0 or depNo==null or depNo =='') and (positionNo1==null or positionNo1 =='')
		and (startNo==null or startNo=='') and (endNo==null or endNo=='')">
			select * from PROFESSOR_VIEW
		</if>
		<if
			test="(profName!=null and profName !='') or
		(facultyNo!=null and facultyNo !='') or (depNo!=0 and depNo!=null and depNo !='') or (positionNo1 !=null and positionNo1 !='')
		 or (startNo!=null and startNo!='') or (endNo!=null and endNo!='')">
			select * from PROFESSOR_VIEW
			where substr(PROF_NO,1,4) between #{startNo} and #{endNo}
			<if test="profName!=null and profName !=''">
				and prof_name like '%' || #{profName} || '%'
			</if>
			<if test="facultyNo!=null and facultyNo !=''">
				and faculty_no=#{facultyNo}
			</if>
			<if test="depNo!=0 and depNo!=null and depNo !=''">
				and dep_no=#{depNo}
			</if>
			<if test="positionNo1 !=null and positionNo1 !=''">
				and position_no in (#{positionNo1}
				<if test="positionNo2 !=null and positionNo2 !=''">
					,#{positionNo2}
				</if>
				<if test="positionNo3 !=null and positionNo3 !=''">
					,#{positionNo3}
				</if>
				<if test="positionNo4 !=null and positionNo4 !=''">
					,#{positionNo4}
				</if>
				<if test="positionNo5 !=null and positionNo5 !=''">
					,#{positionNo5}
				</if>
				)
			</if>
		</if>
		order by prof_no
		)A
		)
		<![CDATA[
		where RNUM>#{firstRecordIndex}
		  and RNUM<=#{firstRecordIndex }+ #{recordCountPerPage}]]>
	</select>
	<select id="getTotalRecord" parameterType="profSearchVO"
		resultType="int">
		<if
			test="(profName==null or profName =='') and
		(facultyNo==null or facultyNo =='') and (depNo==0 or depNo==null or depNo =='') and (positionNo1==null or positionNo1 =='')
		and (startNo==null or startNo=='') and (endNo==null or endNo=='')">
			select count(*) from PROFESSOR_VIEW
		</if>
		<if
			test="(profName!=null and profName !='') or
		(facultyNo!=null and facultyNo !='') or (depNo!=0 and depNo!=null and depNo !='') or (positionNo1 !=null and positionNo1 !='')
		 or (startNo!=null and startNo!='') or (endNo!=null and endNo!='')">
			select count(*) from PROFESSOR_VIEW
			where substr(PROF_NO,1,4) between #{startNo} and #{endNo}
			<if test="profName!=null and profName !=''">
				and prof_name like '%' || #{profName} || '%'
			</if>
			<if test="facultyNo!=null and facultyNo !=''">
				and faculty_no=#{facultyNo}
			</if>
			<if test="depNo!=0 and depNo!=null and depNo !=''">
				and dep_no=#{depNo}
			</if>
			<if test="positionNo1 !=null and positionNo1 !=''">
				and position_no in (#{positionNo1}
				<if test="positionNo2 !=null and positionNo2 !=''">
					,#{positionNo2}
				</if>
				<if test="positionNo3 !=null and positionNo3 !=''">
					,#{positionNo3}
				</if>
				<if test="positionNo4 !=null and positionNo4 !=''">
					,#{positionNo4}
				</if>
				<if test="positionNo5 !=null and positionNo5 !=''">
					,#{positionNo5}
				</if>
				)
			</if>
		</if>
	</select>

	<update id="updatePosition" parameterType="professorVo">
		update professor
		set position_no = #{positionNo}
		where prof_no=#{profNo}
	</update>

	<delete id="deleteProfessor" parameterType="String">
		delete from professor
		where prof_no=#{profNo}
	</delete>
	
	<select id="phoneBook" resultType="phoneBookVO" parameterType="string">
		select r.stu_no, s.name, s.semester, d.dep_name, o.hp1 || o.hp2 || o.hp3 as phoneNo 
		from registration r join official_info o
		on r.stu_no=o.official_no
		join student s
		on r.stu_no=s.stu_no
		join department d
		on s.major=d.dep_no
		<if test="value!=null">
			where r.sub_code=#{subCode}
		</if> 
	</select>
	
	<update id="updateProfessor" parameterType="professorVo">
		update professor
		set dep_no = #{depNo}, position_no=#{positionNo}
		where prof_no = #{profNo}
	</update>
	
	<select id="selectListByName" parameterType="String" resultType="professorVo">
		select e.*, (select dep_name from department d where d.dep_no=e.dep_no) dep_name 
		from professor e where e.prof_name like '%'|| #{name} ||'%'
	</select>
	<select id="selectUpList" parameterType="String" resultType="subjectAllVo">
		select s.*,(select count(*)
   				from subj_time
   				 where open_sub_code=(select open_sub_code from open_subj
       			where  prof_no=#{profNo} and SUBJ_CODE=s.subj_code)) count
		from subject s
		where prof_no=#{profNo}
		and (select count(*) from syllabus sy where sy.open_sub_code = (select open_sub_code from open_subj
		       		where  prof_no=#{profNo} and SUBJ_CODE=s.subj_code)) = 0
	</select>
</mapper>
